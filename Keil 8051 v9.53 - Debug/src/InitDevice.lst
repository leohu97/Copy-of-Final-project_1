C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 21:43:30 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src/InitDevice.OBJ
COMPILER INVOKED BY: Z:\Applications\Simplicity Studio.app\Contents\Eclipse\developer\toolchains\keil_8051\9.53\BIN\C51.
                    -exe /Users/liaohu/SimplicityStudio/v4_workspace/Copy of Final project_1/src/InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND R
                    -OM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(/Users/lia
                    -ohu/SimplicityStudio/v4_workspace/Copy of Final project_1/inc/graphics;/Users/liaohu/SimplicityStudio/v4_workspace/Copy 
                    -of Final project_1/inc;/Users/liaohu/SimplicityStudio/v4_workspace/Copy of Final project_1/inc/config;/Applications/Simp
                    -licity Studio.app/Contents/Eclipse/developer/sdks/8051/v4.0.3//kits/common/bsp;/Applications/Simplicity Studio.app/Conte
                    -nts/Eclipse/developer/sdks/8051/v4.0.3//kits/EFM8BB3_SLSTK2022A/config;/Applications/Simplicity Studio.app/Contents/Ecli
                    -pse/developer/sdks/8051/v4.0.3//Device/EFM8BB3/peripheral_driver/inc;/Applications/Simplicity Studio.app/Contents/Eclips
                    -e/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_joystick;/Applications/Simplicity Studio.app/Contents/Eclipse/dev
                    -eloper/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd/inc;/Applications/Simplicity Studio.app/Contents/Eclipse/de
                    -veloper/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd/inc/graphics;/Applications/Simplicity Studio.app/Contents/
                    -Eclipse/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd/inc/config;/Applications/Simplicity Studio.app/C
                    -ontents/Eclipse/developer/sdks/8051/v4.0.3//Device/shared/si8051base;/Applications/Simplicity Studio.app/Contents/Eclips
                    -e/developer/sdks/8051/v4.0.3//Device/EFM8BB3/inc;/Applications/Simplicity Studio.app/Contents/Eclipse/developer/sdks/805
                    -1/v4.0.3//kits/common/drivers/efm8_retargetserial) PRINT(.\src/InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT
                    -(.\src/InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB3_Register_Enums.h>
  11          #include "InitDevice.h"
  12          #include "function_generator.h"
  13          
  14          // USER PROTOTYPES
  15          // USER FUNCTIONS
  16          
  17          // $[Library Includes]
  18          // [Library Includes]$
  19          
  20          //==============================================================================
  21          // enter_DefaultMode_from_RESET
  22          //==============================================================================
  23          extern void enter_DefaultMode_from_RESET(void) {
  24   1              // $[Config Calls]
  25   1              // Save the SFRPAGE
  26   1              uint8_t SFRPAGE_save = SFRPAGE;
  27   1              WDT_0_enter_DefaultMode_from_RESET();
  28   1              PORTS_0_enter_DefaultMode_from_RESET();
  29   1              PORTS_1_enter_DefaultMode_from_RESET();
  30   1              PORTS_2_enter_DefaultMode_from_RESET();
  31   1              PORTS_3_enter_DefaultMode_from_RESET();
  32   1              PBCFG_0_enter_DefaultMode_from_RESET();
  33   1              ADC_0_enter_DefaultMode_from_RESET();
  34   1              DAC_0_enter_DefaultMode_from_RESET();
  35   1              DAC_1_enter_DefaultMode_from_RESET();
  36   1              DACGCF_0_enter_DefaultMode_from_RESET();
  37   1              VREF_0_enter_DefaultMode_from_RESET();
  38   1              CLOCK_0_enter_DefaultMode_from_RESET();
  39   1              TIMER01_0_enter_DefaultMode_from_RESET();
  40   1              TIMER16_3_enter_DefaultMode_from_RESET();
  41   1              TIMER16_4_enter_DefaultMode_from_RESET();
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 21:43:30 PAGE 2   

  42   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  43   1              SPI_0_enter_DefaultMode_from_RESET();
  44   1              UART_0_enter_DefaultMode_from_RESET();
  45   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  46   1              // Restore the SFRPAGE
  47   1              SFRPAGE = SFRPAGE_save;
  48   1              // [Config Calls]$
  49   1      
  50   1      }
  51          
  52          //================================================================================
  53          // WDT_0_enter_DefaultMode_from_RESET
  54          //================================================================================
  55          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  56   1              // $[WDTCN - Watchdog Timer Control]
  57   1              SFRPAGE = 0x00;
  58   1              //Disable Watchdog with key sequence
  59   1              WDTCN = 0xDE; //First key
  60   1              WDTCN = 0xAD; //Second key
  61   1              // [WDTCN - Watchdog Timer Control]$
  62   1      
  63   1      }
  64          
  65          //================================================================================
  66          // PORTS_0_enter_DefaultMode_from_RESET
  67          //================================================================================
  68          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
  69   1              // $[P0 - Port 0 Pin Latch]
  70   1              // [P0 - Port 0 Pin Latch]$
  71   1      
  72   1              // $[P0MDOUT - Port 0 Output Mode]
  73   1              /***********************************************************************
  74   1               - P0.0 output is open-drain
  75   1               - P0.1 output is open-drain
  76   1               - P0.2 output is open-drain
  77   1               - P0.3 output is open-drain
  78   1               - P0.4 output is push-pull
  79   1               - P0.5 output is open-drain
  80   1               - P0.6 output is push-pull
  81   1               - P0.7 output is open-drain
  82   1               ***********************************************************************/
  83   1              P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
  84   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
  85   1                              | P0MDOUT_B4__PUSH_PULL | P0MDOUT_B5__OPEN_DRAIN
  86   1                              | P0MDOUT_B6__PUSH_PULL | P0MDOUT_B7__OPEN_DRAIN;
  87   1              // [P0MDOUT - Port 0 Output Mode]$
  88   1      
  89   1              // $[P0MDIN - Port 0 Input Mode]
  90   1              /***********************************************************************
  91   1               - P0.0 pin is configured for analog mode
  92   1               - P0.1 pin is configured for digital mode
  93   1               - P0.2 pin is configured for digital mode
  94   1               - P0.3 pin is configured for digital mode
  95   1               - P0.4 pin is configured for digital mode
  96   1               - P0.5 pin is configured for digital mode
  97   1               - P0.6 pin is configured for digital mode
  98   1               - P0.7 pin is configured for digital mode
  99   1               ***********************************************************************/
 100   1              P0MDIN = P0MDIN_B0__ANALOG | P0MDIN_B1__DIGITAL | P0MDIN_B2__DIGITAL
 101   1                              | P0MDIN_B3__DIGITAL | P0MDIN_B4__DIGITAL | P0MDIN_B5__DIGITAL
 102   1                              | P0MDIN_B6__DIGITAL | P0MDIN_B7__DIGITAL;
 103   1              // [P0MDIN - Port 0 Input Mode]$
 104   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 21:43:30 PAGE 3   

 105   1              // $[P0SKIP - Port 0 Skip]
 106   1              /***********************************************************************
 107   1               - P0.0 pin is skipped by the crossbar
 108   1               - P0.1 pin is skipped by the crossbar
 109   1               - P0.2 pin is skipped by the crossbar
 110   1               - P0.3 pin is skipped by the crossbar
 111   1               - P0.4 pin is not skipped by the crossbar
 112   1               - P0.5 pin is not skipped by the crossbar
 113   1               - P0.6 pin is not skipped by the crossbar
 114   1               - P0.7 pin is not skipped by the crossbar
 115   1               ***********************************************************************/
 116   1              P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
 117   1                              | P0SKIP_B3__SKIPPED | P0SKIP_B4__NOT_SKIPPED
 118   1                              | P0SKIP_B5__NOT_SKIPPED | P0SKIP_B6__NOT_SKIPPED
 119   1                              | P0SKIP_B7__NOT_SKIPPED;
 120   1              // [P0SKIP - Port 0 Skip]$
 121   1      
 122   1              // $[P0MASK - Port 0 Mask]
 123   1              /***********************************************************************
 124   1               - P0.0 pin logic value is ignored and will not cause a port mismatch
 125   1               event
 126   1               - P0.1 pin logic value is ignored and will not cause a port mismatch
 127   1               event
 128   1               - P0.2 pin logic value is compared to P0MAT.2
 129   1               - P0.3 pin logic value is compared to P0MAT.3
 130   1               - P0.4 pin logic value is ignored and will not cause a port mismatch
 131   1               event
 132   1               - P0.5 pin logic value is ignored and will not cause a port mismatch
 133   1               event
 134   1               - P0.6 pin logic value is ignored and will not cause a port mismatch
 135   1               event
 136   1               - P0.7 pin logic value is ignored and will not cause a port mismatch
 137   1               event
 138   1               ***********************************************************************/
 139   1              P0MASK = P0MASK_B0__IGNORED | P0MASK_B1__IGNORED | P0MASK_B2__COMPARED
 140   1                              | P0MASK_B3__COMPARED | P0MASK_B4__IGNORED | P0MASK_B5__IGNORED
 141   1                              | P0MASK_B6__IGNORED | P0MASK_B7__IGNORED;
 142   1              // [P0MASK - Port 0 Mask]$
 143   1      
 144   1              // $[P0MAT - Port 0 Match]
 145   1              // [P0MAT - Port 0 Match]$
 146   1      
 147   1      }
 148          
 149          //================================================================================
 150          // PORTS_1_enter_DefaultMode_from_RESET
 151          //================================================================================
 152          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 153   1              // $[P1 - Port 1 Pin Latch]
 154   1              // [P1 - Port 1 Pin Latch]$
 155   1      
 156   1              // $[P1MDOUT - Port 1 Output Mode]
 157   1              /***********************************************************************
 158   1               - P1.0 output is push-pull
 159   1               - P1.1 output is open-drain
 160   1               - P1.2 output is open-drain
 161   1               - P1.3 output is open-drain
 162   1               - P1.4 output is open-drain
 163   1               - P1.5 output is open-drain
 164   1               - P1.6 output is open-drain
 165   1               - P1.7 output is open-drain
 166   1               ***********************************************************************/
 167   1              P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__OPEN_DRAIN
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 21:43:30 PAGE 4   

 168   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN
 169   1                              | P1MDOUT_B4__OPEN_DRAIN | P1MDOUT_B5__OPEN_DRAIN
 170   1                              | P1MDOUT_B6__OPEN_DRAIN | P1MDOUT_B7__OPEN_DRAIN;
 171   1              // [P1MDOUT - Port 1 Output Mode]$
 172   1      
 173   1              // $[P1MDIN - Port 1 Input Mode]
 174   1              /***********************************************************************
 175   1               - P1.0 pin is configured for digital mode
 176   1               - P1.1 pin is configured for analog mode
 177   1               - P1.2 pin is configured for digital mode
 178   1               - P1.3 pin is configured for digital mode
 179   1               - P1.4 pin is configured for digital mode
 180   1               - P1.5 pin is configured for digital mode
 181   1               - P1.6 pin is configured for digital mode
 182   1               - P1.7 pin is configured for analog mode
 183   1               ***********************************************************************/
 184   1              P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__ANALOG | P1MDIN_B2__DIGITAL
 185   1                              | P1MDIN_B3__DIGITAL | P1MDIN_B4__DIGITAL | P1MDIN_B5__DIGITAL
 186   1                              | P1MDIN_B6__DIGITAL | P1MDIN_B7__ANALOG;
 187   1              // [P1MDIN - Port 1 Input Mode]$
 188   1      
 189   1              // $[P1SKIP - Port 1 Skip]
 190   1              /***********************************************************************
 191   1               - P1.0 pin is not skipped by the crossbar
 192   1               - P1.1 pin is skipped by the crossbar
 193   1               - P1.2 pin is skipped by the crossbar
 194   1               - P1.3 pin is skipped by the crossbar
 195   1               - P1.4 pin is not skipped by the crossbar
 196   1               - P1.5 pin is not skipped by the crossbar
 197   1               - P1.6 pin is not skipped by the crossbar
 198   1               - P1.7 pin is skipped by the crossbar
 199   1               ***********************************************************************/
 200   1              P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__SKIPPED
 201   1                              | P1SKIP_B3__SKIPPED | P1SKIP_B4__NOT_SKIPPED
 202   1                              | P1SKIP_B5__NOT_SKIPPED | P1SKIP_B6__NOT_SKIPPED
 203   1                              | P1SKIP_B7__SKIPPED;
 204   1              // [P1SKIP - Port 1 Skip]$
 205   1      
 206   1              // $[P1MASK - Port 1 Mask]
 207   1              // [P1MASK - Port 1 Mask]$
 208   1      
 209   1              // $[P1MAT - Port 1 Match]
 210   1              /***********************************************************************
 211   1               - P1.0 pin logic value is compared with logic HIGH
 212   1               - P1.1 pin logic value is compared with logic HIGH
 213   1               - P1.2 pin logic value is compared with logic HIGH
 214   1               - P1.3 pin logic value is compared with logic HIGH
 215   1               - P1.4 pin logic value is compared with logic HIGH
 216   1               - P1.5 pin logic value is compared with logic HIGH
 217   1               - P1.6 pin logic value is compared with logic HIGH
 218   1               - P1.7 pin logic value is compared with logic LOW
 219   1               ***********************************************************************/
 220   1              P1MAT = P1MAT_B0__HIGH | P1MAT_B1__HIGH | P1MAT_B2__HIGH | P1MAT_B3__HIGH
 221   1                              | P1MAT_B4__HIGH | P1MAT_B5__HIGH | P1MAT_B6__HIGH | P1MAT_B7__LOW;
 222   1              // [P1MAT - Port 1 Match]$
 223   1      
 224   1      }
 225          
 226          //================================================================================
 227          // PORTS_2_enter_DefaultMode_from_RESET
 228          //================================================================================
 229          extern void PORTS_2_enter_DefaultMode_from_RESET(void) {
 230   1              // $[P2 - Port 2 Pin Latch]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 21:43:30 PAGE 5   

 231   1              // [P2 - Port 2 Pin Latch]$
 232   1      
 233   1              // $[P2MDOUT - Port 2 Output Mode]
 234   1              /***********************************************************************
 235   1               - P2.0 output is push-pull
 236   1               - P2.1 output is open-drain
 237   1               - P2.2 output is open-drain
 238   1               - P2.3 output is push-pull
 239   1               - P2.4 output is open-drain
 240   1               - P2.5 output is open-drain
 241   1               - P2.6 output is push-pull
 242   1               ***********************************************************************/
 243   1              P2MDOUT = P2MDOUT_B0__PUSH_PULL | P2MDOUT_B1__OPEN_DRAIN
 244   1                              | P2MDOUT_B2__OPEN_DRAIN | P2MDOUT_B3__PUSH_PULL
 245   1                              | P2MDOUT_B4__OPEN_DRAIN | P2MDOUT_B5__OPEN_DRAIN
 246   1                              | P2MDOUT_B6__PUSH_PULL;
 247   1              // [P2MDOUT - Port 2 Output Mode]$
 248   1      
 249   1              // $[P2MDIN - Port 2 Input Mode]
 250   1              // [P2MDIN - Port 2 Input Mode]$
 251   1      
 252   1              // $[P2SKIP - Port 2 Skip]
 253   1              /***********************************************************************
 254   1               - P2.0 pin is skipped by the crossbar
 255   1               - P2.1 pin is not skipped by the crossbar
 256   1               - P2.2 pin is not skipped by the crossbar
 257   1               - P2.3 pin is skipped by the crossbar
 258   1               ***********************************************************************/
 259   1              SFRPAGE = 0x20;
 260   1              P2SKIP = P2SKIP_B0__SKIPPED | P2SKIP_B1__NOT_SKIPPED
 261   1                              | P2SKIP_B2__NOT_SKIPPED | P2SKIP_B3__SKIPPED;
 262   1              // [P2SKIP - Port 2 Skip]$
 263   1      
 264   1              // $[P2MASK - Port 2 Mask]
 265   1              // [P2MASK - Port 2 Mask]$
 266   1      
 267   1              // $[P2MAT - Port 2 Match]
 268   1              // [P2MAT - Port 2 Match]$
 269   1      
 270   1      }
 271          
 272          //================================================================================
 273          // PORTS_3_enter_DefaultMode_from_RESET
 274          //================================================================================
 275          extern void PORTS_3_enter_DefaultMode_from_RESET(void) {
 276   1              // $[P3 - Port 3 Pin Latch]
 277   1              // [P3 - Port 3 Pin Latch]$
 278   1      
 279   1              // $[P3MDOUT - Port 3 Output Mode]
 280   1              // [P3MDOUT - Port 3 Output Mode]$
 281   1      
 282   1              // $[P3MDIN - Port 3 Input Mode]
 283   1              /***********************************************************************
 284   1               - P3.0 pin is configured for analog mode
 285   1               - P3.1 pin is configured for analog mode
 286   1               - P3.2 pin is configured for digital mode
 287   1               - P3.3 pin is configured for digital mode
 288   1               - P3.4 pin is configured for digital mode
 289   1               - P3.7 pin is configured for digital mode
 290   1               ***********************************************************************/
 291   1              P3MDIN = P3MDIN_B0__ANALOG | P3MDIN_B1__ANALOG | P3MDIN_B2__DIGITAL
 292   1                              | P3MDIN_B3__DIGITAL | P3MDIN_B4__DIGITAL | P3MDIN_B7__DIGITAL;
 293   1              // [P3MDIN - Port 3 Input Mode]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 21:43:30 PAGE 6   

 294   1      
 295   1      }
 296          
 297          //================================================================================
 298          // PBCFG_0_enter_DefaultMode_from_RESET
 299          //================================================================================
 300          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 301   1              // $[XBR2 - Port I/O Crossbar 2]
 302   1              /***********************************************************************
 303   1               - Weak Pullups enabled 
 304   1               - Crossbar enabled
 305   1               - UART1 I/O unavailable at Port pin
 306   1               - UART1 RTS1 unavailable at Port pin
 307   1               - UART1 CTS1 unavailable at Port pin
 308   1               ***********************************************************************/
 309   1              SFRPAGE = 0x00;
 310   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 311   1                              | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
 312   1                              | XBR2_URT1CTSE__DISABLED;
 313   1              // [XBR2 - Port I/O Crossbar 2]$
 314   1      
 315   1              // $[PRTDRV - Port Drive Strength]
 316   1              // [PRTDRV - Port Drive Strength]$
 317   1      
 318   1              // $[XBR0 - Port I/O Crossbar 0]
 319   1              /***********************************************************************
 320   1               - UART0 TX0, RX0 routed to Port pins P0.4 and P0.5
 321   1               - SPI I/O routed to Port pins
 322   1               - SMBus 0 I/O unavailable at Port pins
 323   1               - CP0 unavailable at Port pin
 324   1               - Asynchronous CP0 unavailable at Port pin
 325   1               - CP1 unavailable at Port pin
 326   1               - Asynchronous CP1 unavailable at Port pin
 327   1               - SYSCLK unavailable at Port pin
 328   1               ***********************************************************************/
 329   1              XBR0 = XBR0_URT0E__ENABLED | XBR0_SPI0E__ENABLED | XBR0_SMB0E__DISABLED
 330   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 331   1                              | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 332   1              // [XBR0 - Port I/O Crossbar 0]$
 333   1      
 334   1              // $[XBR1 - Port I/O Crossbar 1]
 335   1              // [XBR1 - Port I/O Crossbar 1]$
 336   1      
 337   1      }
 338          
 339          //================================================================================
 340          // ADC_0_enter_DefaultMode_from_RESET
 341          //================================================================================
 342          extern void ADC_0_enter_DefaultMode_from_RESET(void) {
 343   1              // $[ADC0CN2 - ADC0 Control 2]
 344   1              /***********************************************************************
 345   1               - ADC0 conversion initiated on overflow of Timer 0
 346   1               - The ADC accumulator is over-written with the results of any conversion
 347   1               ***********************************************************************/
 348   1              ADC0CN2 = ADC0CN2_ADCM__TIMER0 | ADC0CN2_PACEN__PAC_DISABLED;
 349   1              // [ADC0CN2 - ADC0 Control 2]$
 350   1      
 351   1              // $[ADC0CN1 - ADC0 Control 1]
 352   1              /***********************************************************************
 353   1               - ADC0 operates in 10-bit mode
 354   1               - Right justified. No shifting applied
 355   1               - Perform and Accumulate 1 conversion
 356   1               ***********************************************************************/
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 21:43:30 PAGE 7   

 357   1              ADC0CN1 = ADC0CN1_ADBITS__10_BIT | ADC0CN1_ADSJST__RIGHT_NO_SHIFT
 358   1                              | ADC0CN1_ADRPT__ACC_1;
 359   1              // [ADC0CN1 - ADC0 Control 1]$
 360   1      
 361   1              // $[ADC0MX - ADC0 Multiplexer Selection]
 362   1              /***********************************************************************
 363   1               - Select ADC0.13
 364   1               ***********************************************************************/
 365   1              ADC0MX = ADC0MX_ADC0MX__ADC0P13;
 366   1              // [ADC0MX - ADC0 Multiplexer Selection]$
 367   1      
 368   1              // $[ADC0CF2 - ADC0 Power Control]
 369   1              /***********************************************************************
 370   1               - The ADC0 ground reference is the GND pin
 371   1               - The ADC0 voltage reference is the VDD pin
 372   1               - Power Up Delay Time = 0x1F
 373   1               ***********************************************************************/
 374   1              ADC0CF2 = ADC0CF2_GNDSL__GND_PIN | ADC0CF2_REFSL__VDD_PIN
 375   1                              | (0x1F << ADC0CF2_ADPWR__SHIFT);
 376   1              // [ADC0CF2 - ADC0 Power Control]$
 377   1      
 378   1              // $[ADC0CF0 - ADC0 Configuration]
 379   1              /***********************************************************************
 380   1               - ADCCLK = SYSCLK
 381   1               - SAR Clock Divider = 0x01
 382   1               ***********************************************************************/
 383   1              ADC0CF0 = ADC0CF0_ADCLKSEL__SYSCLK | (0x01 << ADC0CF0_ADSC__SHIFT);
 384   1              // [ADC0CF0 - ADC0 Configuration]$
 385   1      
 386   1              // $[ADC0CF1 - ADC0 Configuration]
 387   1              /***********************************************************************
 388   1               - Disable low power mode
 389   1               - Conversion Tracking Time = 0x01
 390   1               ***********************************************************************/
 391   1              ADC0CF1 = ADC0CF1_ADLPM__LP_DISABLED | (0x01 << ADC0CF1_ADTK__SHIFT);
 392   1              // [ADC0CF1 - ADC0 Configuration]$
 393   1      
 394   1              // $[ADC0ASAL - ADC0 Autoscan Start Address Low Byte]
 395   1              // [ADC0ASAL - ADC0 Autoscan Start Address Low Byte]$
 396   1      
 397   1              // $[ADC0GTH - ADC0 Greater-Than High Byte]
 398   1              // [ADC0GTH - ADC0 Greater-Than High Byte]$
 399   1      
 400   1              // $[ADC0GTL - ADC0 Greater-Than Low Byte]
 401   1              // [ADC0GTL - ADC0 Greater-Than Low Byte]$
 402   1      
 403   1              // $[ADC0LTH - ADC0 Less-Than High Byte]
 404   1              // [ADC0LTH - ADC0 Less-Than High Byte]$
 405   1      
 406   1              // $[ADC0LTL - ADC0 Less-Than Low Byte]
 407   1              // [ADC0LTL - ADC0 Less-Than Low Byte]$
 408   1      
 409   1              // $[ADC0ASCF - ADC0 Autoscan Configuration]
 410   1              // [ADC0ASCF - ADC0 Autoscan Configuration]$
 411   1      
 412   1              // $[ADC0CN0 - ADC0 Control 0]
 413   1              /***********************************************************************
 414   1               - Enable ADC0 
 415   1               ***********************************************************************/
 416   1              ADC0CN0 |= ADC0CN0_ADEN__ENABLED;
 417   1              // [ADC0CN0 - ADC0 Control 0]$
 418   1      
 419   1      }
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 21:43:30 PAGE 8   

 420          
 421          //================================================================================
 422          // DAC_0_enter_DefaultMode_from_RESET
 423          //================================================================================
 424          extern void DAC_0_enter_DefaultMode_from_RESET(void) {
 425   1              // $[DAC0CF0 - DAC0 Configuration 0]
 426   1              /***********************************************************************
 427   1               - DAC0 is enabled and will drive the output pin
 428   1               - DAC0 output updates occur on Timer 4 high byte overflow
 429   1               - DAC0 input is treated as right-justified
 430   1               - All resets will reset DAC0 and its associated registers
 431   1               ***********************************************************************/
 432   1              SFRPAGE = 0x30;
 433   1              DAC0CF0 = DAC0CF0_EN__ENABLE | DAC0CF0_UPDATE__TIMER4
 434   1                              | DAC0CF0_LJST__RIGHT_JUSTIFY | DAC0CF0_RSTMD__NORMAL;
 435   1              // [DAC0CF0 - DAC0 Configuration 0]$
 436   1      
 437   1              // $[DAC0CF1 - DAC0 Configuration 1]
 438   1              // [DAC0CF1 - DAC0 Configuration 1]$
 439   1      
 440   1      }
 441          
 442          //================================================================================
 443          // DAC_1_enter_DefaultMode_from_RESET
 444          //================================================================================
 445          extern void DAC_1_enter_DefaultMode_from_RESET(void) {
 446   1              // $[DAC1CF0 - DAC1 Configuration 0]
 447   1              /***********************************************************************
 448   1               - DAC1 is enabled and will drive the output pin
 449   1               - DAC1 output updates occur on Timer 4 high byte overflow
 450   1               - DAC1 input is treated as right-justified
 451   1               - All resets will reset DAC1 and its associated registers
 452   1               ***********************************************************************/
 453   1              DAC1CF0 = DAC1CF0_EN__ENABLE | DAC1CF0_UPDATE__TIMER4
 454   1                              | DAC1CF0_LJST__RIGHT_JUSTIFY | DAC1CF0_RSTMD__NORMAL;
 455   1              // [DAC1CF0 - DAC1 Configuration 0]$
 456   1      
 457   1              // $[DAC1CF1 - DAC1 Configuration 1]
 458   1              // [DAC1CF1 - DAC1 Configuration 1]$
 459   1      
 460   1      }
 461          
 462          //================================================================================
 463          // DACGCF_0_enter_DefaultMode_from_RESET
 464          //================================================================================
 465          extern void DACGCF_0_enter_DefaultMode_from_RESET(void) {
 466   1              // $[DACGCF0 - DAC Global Configuration 0]
 467   1              /***********************************************************************
 468   1               - Select the VREF pin
 469   1               - Select the VDD supply
 470   1               - Input = DAC1H:DAC1L
 471   1               - Input = DAC3H:DAC3L
 472   1               - DAC1 always updates from the data source selected in D1SRC
 473   1               - DAC3 always updates from the data source selected in D3SRC
 474   1               ***********************************************************************/
 475   1              DACGCF0 = DACGCF0_D01REFSL__VREF | DACGCF0_D23REFSL__VDD
 476   1                              | DACGCF0_D1SRC__DAC1 | DACGCF0_D3SRC__DAC3 | DACGCF0_D1AMEN__NORMAL
 477   1                              | DACGCF0_D3AMEN__NORMAL;
 478   1              // [DACGCF0 - DAC Global Configuration 0]$
 479   1      
 480   1              // $[DACGCF2 - DAC Global Configuration 2]
 481   1              // [DACGCF2 - DAC Global Configuration 2]$
 482   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 21:43:30 PAGE 9   

 483   1      }
 484          
 485          //================================================================================
 486          // VREF_0_enter_DefaultMode_from_RESET
 487          //================================================================================
 488          extern void VREF_0_enter_DefaultMode_from_RESET(void) {
 489   1              // $[REF0CN - Voltage Reference Control]
 490   1              /***********************************************************************
 491   1               - 2.4 V reference output to VREF pin
 492   1               ***********************************************************************/
 493   1              SFRPAGE = 0x00;
 494   1              REF0CN = REF0CN_VREFSL__VREF_2P4;
 495   1              // [REF0CN - Voltage Reference Control]$
 496   1      
 497   1      }
 498          
 499          //================================================================================
 500          // CLOCK_0_enter_DefaultMode_from_RESET
 501          //================================================================================
 502          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 503   1              // $[HFOSC1 Setup]
 504   1              // [HFOSC1 Setup]$
 505   1      
 506   1              // $[CLKSEL - Clock Select]
 507   1              /***********************************************************************
 508   1               - Clock derived from the Internal High Frequency Oscillator 0
 509   1               - SYSCLK is equal to selected clock source divided by 1
 510   1               ***********************************************************************/
 511   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 512   1              while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY)
 513   1                      ;
 514   1              // [CLKSEL - Clock Select]$
 515   1      
 516   1      }
 517          
 518          //================================================================================
 519          // TIMER01_0_enter_DefaultMode_from_RESET
 520          //================================================================================
 521          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 522   1              // $[Timer Initialization]
 523   1              //Save Timer Configuration
 524   1              uint8_t TCON_save;
 525   1              TCON_save = TCON;
 526   1              //Stop Timers
 527   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 528   1      
 529   1              // [Timer Initialization]$
 530   1      
 531   1              // $[TH0 - Timer 0 High Byte]
 532   1              /***********************************************************************
 533   1               - Timer 0 High Byte = 0x01
 534   1               ***********************************************************************/
 535   1              TH0 = (0x01 << TH0_TH0__SHIFT);
 536   1              // [TH0 - Timer 0 High Byte]$
 537   1      
 538   1              // $[TL0 - Timer 0 Low Byte]
 539   1              // [TL0 - Timer 0 Low Byte]$
 540   1      
 541   1              // $[TH1 - Timer 1 High Byte]
 542   1              /***********************************************************************
 543   1               - Timer 1 High Byte = 0x96
 544   1               ***********************************************************************/
 545   1              TH1 = (0x96 << TH1_TH1__SHIFT);
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 21:43:30 PAGE 10  

 546   1              // [TH1 - Timer 1 High Byte]$
 547   1      
 548   1              // $[TL1 - Timer 1 Low Byte]
 549   1              // [TL1 - Timer 1 Low Byte]$
 550   1      
 551   1              // $[Timer Restoration]
 552   1              //Restore Timer Configuration
 553   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 554   1      
 555   1              // [Timer Restoration]$
 556   1      
 557   1      }
 558          
 559          //================================================================================
 560          // TIMER16_3_enter_DefaultMode_from_RESET
 561          //================================================================================
 562          extern void TIMER16_3_enter_DefaultMode_from_RESET(void) {
 563   1              // $[Timer Initialization]
 564   1              // Save Timer Configuration
 565   1              uint8_t TMR3CN0_TR3_save;
 566   1              TMR3CN0_TR3_save = TMR3CN0 & TMR3CN0_TR3__BMASK;
 567   1              // Stop Timer
 568   1              TMR3CN0 &= ~(TMR3CN0_TR3__BMASK);
 569   1              // [Timer Initialization]$
 570   1      
 571   1              // $[TMR3CN1 - Timer 3 Control 1]
 572   1              // [TMR3CN1 - Timer 3 Control 1]$
 573   1      
 574   1              // $[TMR3CN0 - Timer 3 Control]
 575   1              // [TMR3CN0 - Timer 3 Control]$
 576   1      
 577   1              // $[TMR3H - Timer 3 High Byte]
 578   1              /***********************************************************************
 579   1               - Timer 3 High Byte = 0xF8
 580   1               ***********************************************************************/
 581   1              TMR3H = (0xF8 << TMR3H_TMR3H__SHIFT);
 582   1              // [TMR3H - Timer 3 High Byte]$
 583   1      
 584   1              // $[TMR3L - Timer 3 Low Byte]
 585   1              /***********************************************************************
 586   1               - Timer 3 Low Byte = 0x06
 587   1               ***********************************************************************/
 588   1              TMR3L = (0x06 << TMR3L_TMR3L__SHIFT);
 589   1              // [TMR3L - Timer 3 Low Byte]$
 590   1      
 591   1              // $[TMR3RLH - Timer 3 Reload High Byte]
 592   1              /***********************************************************************
 593   1               - Timer 3 Reload High Byte = 0xF8
 594   1               ***********************************************************************/
 595   1              TMR3RLH = (0xF8 << TMR3RLH_TMR3RLH__SHIFT);
 596   1              // [TMR3RLH - Timer 3 Reload High Byte]$
 597   1      
 598   1              // $[TMR3RLL - Timer 3 Reload Low Byte]
 599   1              /***********************************************************************
 600   1               - Timer 3 Reload Low Byte = 0x06
 601   1               ***********************************************************************/
 602   1              TMR3RLL = (0x06 << TMR3RLL_TMR3RLL__SHIFT);
 603   1              // [TMR3RLL - Timer 3 Reload Low Byte]$
 604   1      
 605   1              // $[TMR3CN0]
 606   1              /***********************************************************************
 607   1               - Start Timer 3 running
 608   1               ***********************************************************************/
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 21:43:30 PAGE 11  

 609   1              TMR3CN0 |= TMR3CN0_TR3__RUN;
 610   1              // [TMR3CN0]$
 611   1      
 612   1              // $[Timer Restoration]
 613   1              // Restore Timer Configuration
 614   1              TMR3CN0 |= TMR3CN0_TR3_save;
 615   1              // [Timer Restoration]$
 616   1      
 617   1      }
 618          
 619          //================================================================================
 620          // TIMER16_4_enter_DefaultMode_from_RESET
 621          //================================================================================
 622          extern void TIMER16_4_enter_DefaultMode_from_RESET(void) {
 623   1              // $[Timer Initialization]
 624   1              // Save Timer Configuration
 625   1              uint8_t TMR4CN0_TR4_save;
 626   1              SFRPAGE = 0x10;
 627   1              TMR4CN0_TR4_save = TMR4CN0 & TMR4CN0_TR4__BMASK;
 628   1              // Stop Timer
 629   1              TMR4CN0 &= ~(TMR4CN0_TR4__BMASK);
 630   1              // [Timer Initialization]$
 631   1      
 632   1              // $[TMR4CN1 - Timer 4 Control 1]
 633   1              // [TMR4CN1 - Timer 4 Control 1]$
 634   1      
 635   1              // $[TMR4CN0 - Timer 4 Control]
 636   1              // [TMR4CN0 - Timer 4 Control]$
 637   1      
 638   1              // $[TMR4H - Timer 4 High Byte]
 639   1              /***********************************************************************
 640   1               - Timer 4 High Byte = 0xFE
 641   1               ***********************************************************************/
 642   1              TMR4H = (0xFE << TMR4H_TMR4H__SHIFT);
 643   1              // [TMR4H - Timer 4 High Byte]$
 644   1      
 645   1              // $[TMR4L - Timer 4 Low Byte]
 646   1              /***********************************************************************
 647   1               - Timer 4 Low Byte = 0x68
 648   1               ***********************************************************************/
 649   1              TMR4L = (0x68 << TMR4L_TMR4L__SHIFT);
 650   1              // [TMR4L - Timer 4 Low Byte]$
 651   1      
 652   1              // $[TMR4RLH - Timer 4 Reload High Byte]
 653   1              /***********************************************************************
 654   1               - Timer 4 Reload High Byte = 0xFE
 655   1               ***********************************************************************/
 656   1              TMR4RLH = (0xFE << TMR4RLH_TMR4RLH__SHIFT);
 657   1              // [TMR4RLH - Timer 4 Reload High Byte]$
 658   1      
 659   1              // $[TMR4RLL - Timer 4 Reload Low Byte]
 660   1              /***********************************************************************
 661   1               - Timer 4 Reload Low Byte = 0x68
 662   1               ***********************************************************************/
 663   1              TMR4RLL = (0x68 << TMR4RLL_TMR4RLL__SHIFT);
 664   1              // [TMR4RLL - Timer 4 Reload Low Byte]$
 665   1      
 666   1              TMR4RL = (uint16_t)(-SYSCLK / SAMPLE_RATE_DAC);
 667   1              // $[TMR4CN0]
 668   1              /***********************************************************************
 669   1               - Start Timer 4 running
 670   1               ***********************************************************************/
 671   1              TMR4CN0 |= TMR4CN0_TR4__RUN;
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 21:43:30 PAGE 12  

 672   1              // [TMR4CN0]$
 673   1      
 674   1              // $[Timer Restoration]
 675   1              // Restore Timer Configuration
 676   1              TMR4CN0 |= TMR4CN0_TR4_save;
 677   1              // [Timer Restoration]$
 678   1      
 679   1      }
 680          
 681          //================================================================================
 682          // TIMER_SETUP_0_enter_DefaultMode_from_RESET
 683          //================================================================================
 684          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 685   1              // $[CKCON0 - Clock Control 0]
 686   1              /***********************************************************************
 687   1               - System clock divided by 48
 688   1               - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 689   1               - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 690   1               - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
 691   1               - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 692   1               - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 693   1               - Timer 1 uses the system clock
 694   1               ***********************************************************************/
 695   1              SFRPAGE = 0x00;
 696   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_48 | CKCON0_T0M__PRESCALE
 697   1                              | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 698   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 699   1                              | CKCON0_T1M__SYSCLK;
 700   1              // [CKCON0 - Clock Control 0]$
 701   1      
 702   1              // $[CKCON1 - Clock Control 1]
 703   1              /***********************************************************************
 704   1               - Timer 4 high byte uses the clock defined by T4XCLK in TMR4CN0
 705   1               - Timer 4 low byte uses the system clock
 706   1               - Timer 5 high byte uses the clock defined by T5XCLK in TMR5CN0
 707   1               - Timer 5 low byte uses the clock defined by T5XCLK in TMR5CN0
 708   1               ***********************************************************************/
 709   1              SFRPAGE = 0x10;
 710   1              CKCON1 = CKCON1_T4MH__EXTERNAL_CLOCK | CKCON1_T4ML__SYSCLK
 711   1                              | CKCON1_T5MH__EXTERNAL_CLOCK | CKCON1_T5ML__EXTERNAL_CLOCK;
 712   1              // [CKCON1 - Clock Control 1]$
 713   1      
 714   1              // $[TMOD - Timer 0/1 Mode]
 715   1              /***********************************************************************
 716   1               - Mode 2, 8-bit Counter/Timer with Auto-Reload
 717   1               - Mode 2, 8-bit Counter/Timer with Auto-Reload
 718   1               - Timer Mode
 719   1               - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 720   1               - Timer Mode
 721   1               - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 722   1               ***********************************************************************/
 723   1              SFRPAGE = 0x00;
 724   1              TMOD = TMOD_T0M__MODE2 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER
 725   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 726   1              // [TMOD - Timer 0/1 Mode]$
 727   1      
 728   1              // $[TCON - Timer 0/1 Control]
 729   1              /***********************************************************************
 730   1               - Start Timer 0 running
 731   1               - Start Timer 1 running
 732   1               ***********************************************************************/
 733   1              TCON |= TCON_TR0__RUN | TCON_TR1__RUN;
 734   1              // [TCON - Timer 0/1 Control]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 21:43:30 PAGE 13  

 735   1      
 736   1      }
 737          
 738          //================================================================================
 739          // SPI_0_enter_DefaultMode_from_RESET
 740          //================================================================================
 741          extern void SPI_0_enter_DefaultMode_from_RESET(void) {
 742   1              // $[SPI0CKR - SPI0 Clock Rate]
 743   1              /***********************************************************************
 744   1               - SPI0 Clock Rate = 0x0B
 745   1               ***********************************************************************/
 746   1              SPI0CKR = (0x0B << SPI0CKR_SPI0CKR__SHIFT);
 747   1              // [SPI0CKR - SPI0 Clock Rate]$
 748   1      
 749   1              // $[SPI0CFG - SPI0 Configuration]
 750   1              /***********************************************************************
 751   1               - Enable master mode. Operate as a master
 752   1               ***********************************************************************/
 753   1              SPI0CFG |= SPI0CFG_MSTEN__MASTER_ENABLED;
 754   1              // [SPI0CFG - SPI0 Configuration]$
 755   1      
 756   1              // $[SPI0PCF - SPI0 Pin Configuration]
 757   1              // [SPI0PCF - SPI0 Pin Configuration]$
 758   1      
 759   1              // $[SPI0CN0 - SPI0 Control]
 760   1              /***********************************************************************
 761   1               - Enable the SPI module
 762   1               - 3-Wire Slave or 3-Wire Master Mode
 763   1               ***********************************************************************/
 764   1              SPI0CN0 &= ~SPI0CN0_NSSMD__FMASK;
 765   1              SPI0CN0 |= SPI0CN0_SPIEN__ENABLED;
 766   1              // [SPI0CN0 - SPI0 Control]$
 767   1      
 768   1              // $[SPI0FCN0 - SPI0 FIFO Control 0]
 769   1              // [SPI0FCN0 - SPI0 FIFO Control 0]$
 770   1      
 771   1              // $[SPI0FCN1 - SPI0 FIFO Control 1]
 772   1              // [SPI0FCN1 - SPI0 FIFO Control 1]$
 773   1      
 774   1      }
 775          
 776          //================================================================================
 777          // INTERRUPT_0_enter_DefaultMode_from_RESET
 778          //================================================================================
 779          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 780   1              // $[EIE1 - Extended Interrupt Enable 1]
 781   1              /***********************************************************************
 782   1               - Enable interrupt requests generated by the ADINT flag
 783   1               - Disable ADC0 Window Comparison interrupt
 784   1               - Disable CP0 interrupts
 785   1               - Disable CP1 interrupts
 786   1               - Enable interrupt requests generated by a Port Match
 787   1               - Disable all PCA0 interrupts
 788   1               - Disable all SMB0 interrupts
 789   1               - Enable interrupt requests generated by the TF3L or TF3H flags
 790   1               ***********************************************************************/
 791   1              EIE1 = EIE1_EADC0__ENABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 792   1                              | EIE1_ECP1__DISABLED | EIE1_EMAT__ENABLED | EIE1_EPCA0__DISABLED
 793   1                              | EIE1_ESMB0__DISABLED | EIE1_ET3__ENABLED;
 794   1              // [EIE1 - Extended Interrupt Enable 1]$
 795   1      
 796   1              // $[EIE2 - Extended Interrupt Enable 2]
 797   1              // [EIE2 - Extended Interrupt Enable 2]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 21:43:30 PAGE 14  

 798   1      
 799   1              // $[EIP1H - Extended Interrupt Priority 1 High]
 800   1              // [EIP1H - Extended Interrupt Priority 1 High]$
 801   1      
 802   1              // $[EIP1 - Extended Interrupt Priority 1 Low]
 803   1              // [EIP1 - Extended Interrupt Priority 1 Low]$
 804   1      
 805   1              // $[EIP2 - Extended Interrupt Priority 2]
 806   1              // [EIP2 - Extended Interrupt Priority 2]$
 807   1      
 808   1              // $[EIP2H - Extended Interrupt Priority 2 High]
 809   1              // [EIP2H - Extended Interrupt Priority 2 High]$
 810   1      
 811   1              // $[IE - Interrupt Enable]
 812   1              /***********************************************************************
 813   1               - Disable all interrupt sources
 814   1               - Disable external interrupt 0
 815   1               - Disable external interrupt 1
 816   1               - Enable interrupt requests generated by SPI0
 817   1               - Disable all Timer 0 interrupt
 818   1               - Disable all Timer 1 interrupt
 819   1               - Enable interrupt requests generated by the TF2L or TF2H flags
 820   1               - Disable UART0 interrupt
 821   1               ***********************************************************************/
 822   1              IE = IE_EA__DISABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 823   1                              | IE_ESPI0__ENABLED | IE_ET0__DISABLED | IE_ET1__DISABLED
 824   1                              | IE_ET2__ENABLED | IE_ES0__DISABLED;
 825   1              // [IE - Interrupt Enable]$
 826   1      
 827   1              // $[IP - Interrupt Priority]
 828   1              // [IP - Interrupt Priority]$
 829   1      
 830   1              // $[IPH - Interrupt Priority High]
 831   1              // [IPH - Interrupt Priority High]$
 832   1      
 833   1      }
 834          
 835          extern void UART_0_enter_DefaultMode_from_RESET(void) {
 836   1              // $[SCON0 - UART0 Serial Port Control]
 837   1              /***********************************************************************
 838   1               - UART0 reception enabled
 839   1               ***********************************************************************/
 840   1              SCON0 |= SCON0_REN__RECEIVE_ENABLED;
 841   1              // [SCON0 - UART0 Serial Port Control]$
 842   1      
 843   1      }
 844          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    303    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
